{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAChCC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAEpCF,EAAKM,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACNL,EAAQM,OAAOF,EAAMG,OAAOC,MAAMC,OAClCR,EAAOK,OAAOF,EAAMG,OAAOG,KAAKD,OAChCP,EAASI,OAAOF,EAAMG,OAAOI,OAAOF,OAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKV,EAAQU,GAAK,EAChCC,EAAcD,EAAGZ,GACdc,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALP,MACjBU,YAAW,WACTC,EAAAxB,GAASyB,OAAOC,QACd,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,OAKnDM,OAAM,SAAAR,G,IAAGC,EAAQD,EAARC,SAAUQ,EAAKT,EAALP,MAClBU,YAAW,WACTC,EAAAxB,GAASyB,OAAOK,QACd,sBAAqCH,OAAfN,EAAS,QAAYM,OAANE,EAAM,M,IAG5CA,GAASvB,C,IAGlB,SAASY,EAAcG,EAAUU,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3Bd,YAAW,WACLS,EACFI,EAAQ,CAAEf,WAAUR,MAAAkB,IAEpBM,EAAO,CAAEhB,WAAUR,MAAAkB,G,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet delay = document.querySelector('[name=\"delay\"]');\nlet step = document.querySelector('[name=\"step\"]');\nlet amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  delay = Number(event.target.delay.value);\n  step = Number(event.target.step.value);\n  amount = Number(event.target.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        }),\n          delay;\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        }),\n          (delay += step);\n      });\n  }\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","event","preventDefault","Number","target","delay","value","step","amount","i","createPromise","then","param","position","delay1","setTimeout","$parcel$interopDefault","Notify","success","concat","catch","delay2","failure","delay3","shouldResolve","Math","random","Promise","resolve","reject"],"version":3,"file":"03-promises.4e9170b7.js.map"}